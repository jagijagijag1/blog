<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AWS on jagijagijag1 notes</title><link>http://jagijagijag1.github.io/blog/tags/aws/</link><description>Recent content in AWS on jagijagijag1 notes</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Sun, 26 Jan 2020 13:19:58 +0900</lastBuildDate><atom:link href="http://jagijagijag1.github.io/blog/tags/aws/index.xml" rel="self" type="application/rss+xml"/><item><title>リングフィットアドベンチャーの運動ログをサーバーレスでPixelaに記録する</title><link>http://jagijagijag1.github.io/blog/posts/2020_01_26/</link><pubDate>Sun, 26 Jan 2020 13:19:58 +0900</pubDate><guid>http://jagijagijag1.github.io/blog/posts/2020_01_26/</guid><description>作ったもの リングフィットアドベンチャーの運動ログ(活動時間，消費カロリー，走行距離)をPixelaに記録して草化する機能をサーバーレスで開発 Switch上でスクショを撮りTwitter投稿すると，画像取得・解析してPixelaのグラフに記録 結果 最近のサボりが可視化された💪 トリガになるツイートは↓な感じ #リングフィットアドベンチャー #RingFitAdventure #NintendoSwitch pic.twitter.com/ZnoWCO30No
&amp;mdash; JagiJagiJagi (@jagijagijag1) January 25, 2020
制約 下記画像のような日毎の運動ログ画面から活動時間，消費カロリー, 走行距離を抽出することのみが対象 その他画面のスクショや個別運動ログは対象外 TwitterのツイートページのHTMLを解析するため，ページの仕様が変わると実行不可 まれにAWS Rekognitionが0をoと判定し，Pixelaへの記録時にエラーが発生する (数値しかありえないので無理やり補正できなくもないが未実施) 全体方針 リングフィットの記録はAPIで取得したりはできないので，スクショから情報引っこ抜くしかない(と思われる) 頑張り度と継続度がみたいので，ライフログを色々記録しているPixelaで可視化 Switchスクショ取得方針 Switchのスクショを自動でクラウドストレージに持っていく手段がない SDカードを経由する方法だとバッチ的になる &amp;amp; 怠惰なので続かなそう… Swithcでスクショ投稿はできるので，Twitterにあげてそこから自動でごにょごにょする方針に → サービス連携として手軽なIFTTTを使って特定のハッシュタグ付きTwitter投稿を自動取得 -&amp;gt; 後続処理のAPIを叩くレシピは後述 スクショからの情報抽出 GarminストレスのときはAWS Rekognitionを使ったが，日本語テキスト検出未対応
cf. Garmin connectのストレス測定結果をPixela + Serverlessで草化 - jagijagijag1&amp;rsquo;s tech blog そのためGoogle CloudのVision APIを利用する方針で検討，デモ試して行けそう</description></item><item><title>サーバーレスで定期的にDropbox内のファイルをS3に転送する</title><link>http://jagijagijag1.github.io/blog/posts/2019_03_02/</link><pubDate>Sat, 02 Mar 2019 23:33:17 +0900</pubDate><guid>http://jagijagijag1.github.io/blog/posts/2019_03_02/</guid><description>つくったもの 定期実行でDropboxの特定フォルダ下ファイルをS3へ転送する機能 具体的には，CloudWatch Eventで定期起動し下記を実行するLambda関数を開発 Dropbox APIを叩いて特定フォルダ配下の全ファイルを取得 当該ファイルをダウンロードし，S3の特定バケットに保存 バケット保存が成功した場合，Dropbox側のオリジナルファイルを削除 経緯 以前S3に入ってきた画像を解析してPixelaに記録するLamba関数を開発 Garmin connectのストレス測定結果をPixela + Serverlessで草化 - qrunch.net この際，iPhoneのスクリーンショットをS3へ送る手段を下記のように構築 IFTTTでiOSのスクリーンショットをDropboxに入れ，ZapierでDropboxからS3にコピーするようにして前に作ったストレス草化Lambdaとシームレスに連携するようにした．ちょっと経由しすぎな気もするけどひとまず…
&amp;mdash; JagiJagiJagi (@jagijagijag1) November 8, 2018
しかしながら，これだけのためにZapierに課金するのも辛いので，イベント駆動を妥協して定期実行でDropbox→S3転送機能を実現してみた これにより，Zapierを経由せず，iPhoneからPixelaをシームレスに結合 環境 MacOS Mojave Go 1.11.5 Serverless Framework 1.38.0 ライブラリ選択 DropboxのGoライブラリは以下の2つを発見 GitHub - dropbox/dropbox-sdk-go-unofficial: An UNOFFICIAL Dropbox v2 API SDK for Go GitHub - tj/go-dropbox: Dropbox v2 client for Go.</description></item><item><title>Elastic Beanstalkで作成されたS3 バケットが削除できないときの対応</title><link>http://jagijagijag1.github.io/blog/posts/2018_11_29/</link><pubDate>Thu, 29 Nov 2018 21:36:19 +0900</pubDate><guid>http://jagijagijag1.github.io/blog/posts/2018_11_29/</guid><description>現象 Elastic Beanstalkを用いるとソースコードなどを格納するS3バケットが作成される アプリ自体を削除したあともバケットが残っている場合，S3のコンソールから削除しようとしても削除できない場合あり 原因 自動でバケットポリシーが設定されており，明示的に削除が拒否されている 対策 バケットのコンソールで&amp;quot;アクセス権限&amp;quot;→&amp;quot;バケットポリシー&amp;quot;を選択し，右上の&amp;quot;削除&amp;quot;でポリシーを削除 その後，バケット一覧に戻り，再びバケット削除を実行すれば削除されるはず</description></item><item><title>CAV 2018でのAWS招待講演のまとめ</title><link>http://jagijagijag1.github.io/blog/posts/2018_11_07/</link><pubDate>Wed, 07 Nov 2018 22:29:12 +0900</pubDate><guid>http://jagijagijag1.github.io/blog/posts/2018_11_07/</guid><description>Formal Reasoning About the Security of Amazon Web Services 形式手法に関するトップカンファレンスであるCAV 2018にて，AWSから講演(Invited Paperの発表)がありました．
そこでの発表からAWSは形式手法にかなり力を入れている印象を受け，割と重要な内容かなと思い，単なる箇条書きですが抜粋・まとめてみました． 月並みですがAWSも中の人達もまじすごい．
著者(発表者)/所属機関 Byron Cook (Amazon Web Services, University College London)
出典 FLoC 2018 (CAV 2018)
FLoC Plenary Lecture (CAV 2018 Invited Paper) AWSでの形式手法の活用について Open Accessのため↓で閲覧可能 Formal Reasoning About the Security of Amazon Web Services | SpringerLink 講演の映像も↓から視聴可能 Formal Reasoning about the Security of Amazon Web Services | University of Oxford Podcasts - Audio and Video Lectures 内容 AWSでは分散アルゴリズムの設計に形式手法(TLA+)を使用 (2014) その後も継続的に形式手法を取り入れいているようで，本論文では特にセキュリティへの形式手法適用事例を紹介 Security of the Cloud: Where Formal Reasoning Fits In AWS内部の開発，特にセキュリティレビューで定理証明やモデル検査(symbolic model checking)の利用が増えている 2017年だけでも下記の事例にて定理証明やモデル検査を適用 s2n (TLS/SSL実装)の検証 ちなみにこの内容の論文が同会議にて発表されている Continuous Formal Verification of Amazon s2n | SpringerLink ハイパーバイザ，ブートローダ，BIOS，ファームウェアの検証 こっちも同会議で発表あり Model Checking Boot Code from AWS Data Centers | SpringerLink ガーベッジコレクタ ネットワーク設計 OSSを活用しつつ使う上で生じた変更をフィードバックしており，例えば下記を利用+貢献 CBMC: C/C++向けのbounded model checker SAW: CやJabaでの特定性質の検証 SMACK: Cプログラムに対するアサーション検証 s2nなど一部プロジェクトでは形式検証ツールをCI/CDに組み込み，継続的検証を実施 SMT-basedのツールで設定ミス防止を図っている 形式手法の利用はコードを書く前から始まっている＝プロトコルやアルゴリズムの設計段階から利用 Securing Customers in the Cloud AWS利用者側に対しても形式手法の適用が始まっている 例えば，S3の公開設定ミスを警告する機能をSMTソルバを用いて実現 おそらく↓の話 How AWS uses automated reasoning to help you achieve security at scale | AWS Security Blog AWS Macieでも同様のツールを利用 複雑なネットワーク設定時の到達性(おそらくルーティングや通信可否)をdatalogを用いて検証 その他 他社事例(文献)として以下に言及 (抜粋) IBM, Google @ Dagstuhl Seminar 2013 Microsoft @ SOSP 2015 分散システムの検証 Facebook @ LICS 2018 codebaseの継続的検証 感想 TLA+の適用に始まり，AWSは形式手法の適用に対し継続的に力を入れいている印象 特に今回は，形式検証のトップカンファレンスであるCAVにて2本の論文採択+Invited talkをしており抜きん出ている こういった会議でプレゼンスを上げることで，AWS利用時の安心度・信頼感が高まる素晴らしい取り組み これだけセキュリティチームで形式手法が利用される/開発者もTLA+などを使えるところを見るに，中の人がちゃんとComputer Scienceの素養を持っていて優秀な模様</description></item></channel></rss>