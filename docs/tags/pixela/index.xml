<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pixela on jagijagijag1 notes</title><link>http://jagijagijag1.github.io/blog/tags/pixela/</link><description>Recent content in pixela on jagijagijag1 notes</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Sun, 26 Jan 2020 13:19:58 +0900</lastBuildDate><atom:link href="http://jagijagijag1.github.io/blog/tags/pixela/index.xml" rel="self" type="application/rss+xml"/><item><title>リングフィットアドベンチャーの運動ログをサーバーレスでPixelaに記録する</title><link>http://jagijagijag1.github.io/blog/posts/2020_01_26/</link><pubDate>Sun, 26 Jan 2020 13:19:58 +0900</pubDate><guid>http://jagijagijag1.github.io/blog/posts/2020_01_26/</guid><description>作ったもの リングフィットアドベンチャーの運動ログ(活動時間，消費カロリー，走行距離)をPixelaに記録して草化する機能をサーバーレスで開発 Switch上でスクショを撮りTwitter投稿すると，画像取得・解析してPixelaのグラフに記録 結果 最近のサボりが可視化された💪 トリガになるツイートは↓な感じ #リングフィットアドベンチャー #RingFitAdventure #NintendoSwitch pic.twitter.com/ZnoWCO30No
&amp;mdash; JagiJagiJagi (@jagijagijag1) January 25, 2020
制約 下記画像のような日毎の運動ログ画面から活動時間，消費カロリー, 走行距離を抽出することのみが対象 その他画面のスクショや個別運動ログは対象外 TwitterのツイートページのHTMLを解析するため，ページの仕様が変わると実行不可 まれにAWS Rekognitionが0をoと判定し，Pixelaへの記録時にエラーが発生する (数値しかありえないので無理やり補正できなくもないが未実施) 全体方針 リングフィットの記録はAPIで取得したりはできないので，スクショから情報引っこ抜くしかない(と思われる) 頑張り度と継続度がみたいので，ライフログを色々記録しているPixelaで可視化 Switchスクショ取得方針 Switchのスクショを自動でクラウドストレージに持っていく手段がない SDカードを経由する方法だとバッチ的になる &amp;amp; 怠惰なので続かなそう… Swithcでスクショ投稿はできるので，Twitterにあげてそこから自動でごにょごにょする方針に → サービス連携として手軽なIFTTTを使って特定のハッシュタグ付きTwitter投稿を自動取得 -&amp;gt; 後続処理のAPIを叩くレシピは後述 スクショからの情報抽出 GarminストレスのときはAWS Rekognitionを使ったが，日本語テキスト検出未対応
cf. Garmin connectのストレス測定結果をPixela + Serverlessで草化 - jagijagijag1&amp;rsquo;s tech blog そのためGoogle CloudのVision APIを利用する方針で検討，デモ試して行けそう</description></item><item><title>QrunchブログのサイドモジュールにPixelaグラフを表示する</title><link>http://jagijagijag1.github.io/blog/posts/2019_09_03/</link><pubDate>Tue, 03 Sep 2019 22:53:56 +0900</pubDate><guid>http://jagijagijag1.github.io/blog/posts/2019_09_03/</guid><description>先日Qrunchの大幅アップデートにより，ブログのカスタマイズ性が上がった 任意のHTML・JSスクリプトが挿入可能に 【お知らせ】正式リリース前最後の大幅アップデートを行います！（8月下旬予定）
ということで，↓で紹介されているはてなブログへのPixelaグラフ埋め込みをQrunchでもできるはず! はてなブログに Pixela グラフを埋め込んで、さらにツールチップを表示させる方法
完成図 表示ごとにincrementされるグラフで簡易PVに 過去に作ったストレス草化で，ストレスを感じつつも生存してる報告 手順 a-knowさんのブログ見れば問題ないけど，一応QrunchのUI上でどこを設定するかメモ (指定するコードも元記事のまま) 以下，[ユーザーメニュー]→[デザインカスタマイズ] or ダッシュボード内[デザイン]で表示されるブログのデザイン設定画面で作業 サイドモジュール追加 (グラフ表示領域設定) [サイドモジュール]にて[モジュールを追加する] [モジュールタイプ]で[カスタム]を選択 [モジュールタイトル]は任意，[コンテンツ（カスタムHTML）]に下記コード(a-knowさんブログまま)を入力し，[追加する] &amp;lt;div id=&amp;#34;svg-load-area&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div style=&amp;#34;text-align:right;&amp;#34;&amp;gt;Powered by &amp;lt;a href=&amp;#34;https://pixe.la/&amp;#34; target=&amp;#34;_blank&amp;#34;&amp;gt;Pixela&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt; ヘッダ下 or フッタ上にscriptタグ追加 (表示するグラフの設定) [カスタムHTML]にて[ヘッダー下] or [フッター上]を選択 ヘッダ下 or フッタ上へのコード指定はPRO機能だが，今の所ベータ期間で誰でも無料でPRO機能を有効化できる https://qrunch.net/pro 表示された入力エリアに下記コード(a-knowさんブログまま)を入力し，[適用] (グラフURLは表示したいグラフを指定) &amp;lt;script src=&amp;#34;https://unpkg.com/tippy.js@3/dist/tippy.all.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; document.addEventListener(&amp;#39;DOMContentLoaded&amp;#39;, function(){ $(&amp;#39;#svg-load-area&amp;#39;).load(&amp;#39;https://pixe.la/v1/users/a-know-blog/graphs/page-views?mode=short&amp;#39;, function(){ tippy(&amp;#39;.</description></item><item><title>「あとで読む」をPixelaで可視化</title><link>http://jagijagijag1.github.io/blog/posts/2018_12_02/</link><pubDate>Sun, 02 Dec 2018 10:54:22 +0900</pubDate><guid>http://jagijagijag1.github.io/blog/posts/2018_12_02/</guid><description>tl;dr なんでも草化できるWebサービスPixelaの利用についてつぶやいたところ，作者のa-knowさんから下記ツイートをいただきました！
うおお……これはまた新しい活躍方法…！！ぜひブログなどにしていただきたいっ！ https://t.co/Cz5zrPVG0Q
&amp;mdash; a-know (@a_know) 2018年12月1日
正直なところ技術的なポイントは何もないのですが，せっかくなのでPixelaの利用事例として記事化してみました．やったことは以下だけです．
PixelaのWebhookとIFTTTのInstapaper連携を用いることで下記を実現し，&amp;ldquo;あとで読む&amp;quot;を可視化 Instapaperに新たに記事が追加されたら，DecrementのWebhookを叩きpixelを茶色化 Instapaperに保存した記事が(読み終わって)アーカイブされたら，IncrementのWebhookを叩きpixelを緑化 動機：溜まっていく一方の&amp;quot;あとで読む&amp;rdquo; 気になった記事があると，あとでちゃんと読もうとInstapaperやはてブなどのサービスに記事を放り込んでおくのはよくあるかなと しかしこの&amp;quot;あとで読む&amp;quot;は，積読や積みゲーよろしく溜まっていく一方になりがち これに対し，下記の点を可視化できれば溜め込まないモチベになるかも？ どれくらい記事をあとで読むつもりで放り込んでいるか (溜め込み度合い) どれくらいあとで読むことにした記事を読んでいるか (消化度合い) 解決(?)：Pixelaでの可視化 以下のIFTTT Appletを作成し，&amp;ldquo;あとで読む&amp;quot;記事の数を可視化
Instapaper (If New item saved) -&amp;gt; Webhooks (then Make a web request) Instapaper部分は，事前にアカウント連携しておき，既存のアクションを選択するのみ Webhooksでは，PixelaのDecrement Webhookを実行 記事が増えるのはネガティブ方向なのでDecrement = 茶色化 Instapaper (If New archived item) -&amp;gt; Webhooks (then Make a web request) Instapaper部分は，事前にアカウント連携しておき，既存のアクションを選択するのみ Webhooksでは，PixelaのIncrement Webhookを実行 記事が減るのはポジティブ方向なのでIncrement = 緑化 Webhooksの部分の詳細 Pixela API Documentを参考に，Increment/DecrementのWebhookを作っておく IFTTT上では，&amp;ldquo;that&amp;quot;側で&amp;quot;Webhooks&amp;quot;を選択し，下記パラメタを設定 URL: https://pixe.</description></item><item><title>Togglの記録をServerless + Pixelaで草化</title><link>http://jagijagijag1.github.io/blog/posts/2018_11_10/</link><pubDate>Sat, 10 Nov 2018 10:52:38 +0900</pubDate><guid>http://jagijagijag1.github.io/blog/posts/2018_11_10/</guid><description>作業時間などの時間管理ツールとしてTogglがある いつ，どの作業をしたかを記録 各作業をプロジェクトやタグで分類可能 Toggl Reportsで可視化も提供されており，特定の作業をどれくらい継続しているか，どのくらい時間をかけているかを見れる でもとりあえず草化したい！ ToggleはAPIを提供しているので比較的用意にデータ抽出可能 画像認識とかいらない！ 作ったもの 1日1回，前日に特定プロジェクトにかけた時間をTogglから抽出し，Pixelaに記録 結果 自分の勉強時間を草化できた 環境 MacOS Mojave Go 1.11.1 Serverless Framework 1.32.0 つまづきメモ しょぼい内容だが備忘録として Lambdaにて時間を扱う場合の注意 CloudWatch Eventsをcron式で時間指定する場合，UTCで指定すること e.g. JSTで毎日午前1時に実行したい→UTCで午後4時(-9時間)を指定する cron( 0 16 * * ? * ) Lambda関数で日時を取得する場合(e.g. Goでのtime.Now())，標準ではUTCで取得する 日本時間を使いたい場合はLambda関数の環境変数でタイムゾーンを指定すること e.g. 変数TZ, 値Asia/Tokyo Toggl APIの使い方 TogglのAPIを利用したい場合，リクエストにAPIトークンを含める APIトークンはProfileから取得可能: https://support.</description></item><item><title>Garmin connectのストレス測定結果をPixela + Serverlessで草化</title><link>http://jagijagijag1.github.io/blog/posts/2018_10_28/</link><pubDate>Sun, 28 Oct 2018 11:11:05 +0900</pubDate><guid>http://jagijagijag1.github.io/blog/posts/2018_10_28/</guid><description>Garmin connectでは心拍数の計測をもとにストレスを数値化してくれる
アプリ内では，一覧でみたいときに折れ線グラフしかない + 最大4週間分しか見れない
別の可視化方法として草化してみたい
作ったもの Garmin connectの画面キャプチャをS3にアップロードすると，日付とストレス値をPixelaに記録するシステム
2018/11/17 追記： 下記を用いればiOSでスクリーンショットを取るだけでPixelaに記録できます． (iOS→Dropbox by IFTTT + Dropbox→S3 by Zapier）
Add your latest iPhone screenshots to a Dropbox folder Amazon S3 + Dropbox Integrations 結果：いい感じに草化できた気がする 直近のストレスが高い，日曜は比較的ストレスが少ない
なるべく色がつかない(薄くなる)ようにしたいという逆モチベ
環境 MacOS Mojave Go 1.11.1 Serverless Framework 1.32.0 iPhone 7(iOS 12.01) + Garmin Connect 4.</description></item></channel></rss>