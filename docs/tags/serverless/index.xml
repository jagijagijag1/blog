<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>serverless on jagijagijag1 notes</title><link>http://jagijagijag1.github.io/blog/tags/serverless/</link><description>Recent content in serverless on jagijagijag1 notes</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Sun, 26 Jan 2020 13:19:58 +0900</lastBuildDate><atom:link href="http://jagijagijag1.github.io/blog/tags/serverless/index.xml" rel="self" type="application/rss+xml"/><item><title>リングフィットアドベンチャーの運動ログをサーバーレスでPixelaに記録する</title><link>http://jagijagijag1.github.io/blog/posts/2020_01_26/</link><pubDate>Sun, 26 Jan 2020 13:19:58 +0900</pubDate><guid>http://jagijagijag1.github.io/blog/posts/2020_01_26/</guid><description>作ったもの リングフィットアドベンチャーの運動ログ(活動時間，消費カロリー，走行距離)をPixelaに記録して草化する機能をサーバーレスで開発 Switch上でスクショを撮りTwitter投稿すると，画像取得・解析してPixelaのグラフに記録 結果 最近のサボりが可視化された💪 トリガになるツイートは↓な感じ #リングフィットアドベンチャー #RingFitAdventure #NintendoSwitch pic.twitter.com/ZnoWCO30No
&amp;mdash; JagiJagiJagi (@jagijagijag1) January 25, 2020
制約 下記画像のような日毎の運動ログ画面から活動時間，消費カロリー, 走行距離を抽出することのみが対象 その他画面のスクショや個別運動ログは対象外 TwitterのツイートページのHTMLを解析するため，ページの仕様が変わると実行不可 まれにAWS Rekognitionが0をoと判定し，Pixelaへの記録時にエラーが発生する (数値しかありえないので無理やり補正できなくもないが未実施) 全体方針 リングフィットの記録はAPIで取得したりはできないので，スクショから情報引っこ抜くしかない(と思われる) 頑張り度と継続度がみたいので，ライフログを色々記録しているPixelaで可視化 Switchスクショ取得方針 Switchのスクショを自動でクラウドストレージに持っていく手段がない SDカードを経由する方法だとバッチ的になる &amp;amp; 怠惰なので続かなそう… Swithcでスクショ投稿はできるので，Twitterにあげてそこから自動でごにょごにょする方針に → サービス連携として手軽なIFTTTを使って特定のハッシュタグ付きTwitter投稿を自動取得 -&amp;gt; 後続処理のAPIを叩くレシピは後述 スクショからの情報抽出 GarminストレスのときはAWS Rekognitionを使ったが，日本語テキスト検出未対応
cf. Garmin connectのストレス測定結果をPixela + Serverlessで草化 - jagijagijag1&amp;rsquo;s tech blog そのためGoogle CloudのVision APIを利用する方針で検討，デモ試して行けそう</description></item><item><title>Cloue Run + Puppeteer + Cloud Schedulebr でサーバーレスなクロールを定期実行する</title><link>http://jagijagijag1.github.io/blog/posts/2019_11_23/</link><pubDate>Sat, 23 Nov 2019 10:38:40 +0900</pubDate><guid>http://jagijagijag1.github.io/blog/posts/2019_11_23/</guid><description>つくるもの 手軽に定期実行するクローラを作りたかった 題材として，あすけん のスコア(健康度)をPixelaに転記する処理を1日1回実行する自動化システムをつくる 転記の結果 つまづきメモ AWS LambdaをやめてGCP Cloud Runを選択 まず最初に，ローカルでPuppeteerを用いてaskenをcrawl → pixelaへ記録する機能を開発 asken2pixela/local GitHub これをベースにPuppeterr on Lambdaでサーバーレスな定期クロールを実現するつもりだった ref: Puppeteer on AWS LambdaをTypescriptからサクッと使う(2019年9月版) - ADliveテックブログ が，Page.$$eval()の返り値が通常のPuppeteerとLambda用のPuppeteerとで違った… 通常のPuppeteer: Array&amp;lt;Element&amp;gt;が返ってきた Lambda用のPuppeteer: Array&amp;lt;ElementHandle&amp;gt;が返ってきた このギャップを埋める修正が面倒なので，ローカルで動いているコード(=普通のPuppeteer)をサーバーレスで動かせばいいのでは? → Cloud Runがある！ Cloud Run: リクエストに応じてコンテナを起動・処理するサーバーレスなGCPのサービス Puppeteerのevalなどで渡す関数内処理のロギング PuppeteerのPage.$$eval()などの引数で渡す関数内でconsole.log()でログを取りたかったが，そのまま書いてもスコープが変わるためコンソール出力されない これに対し，consleイベントをdispatchすることができたため，Pageオブジェクトに対して下記処理を実施し，Page.$$eval()内のログ出力に成功 ref: javascript - Puppeteer log inside page.evaluate - Stack Overflow const browser = await puppeteer.</description></item><item><title>サーバーレスで定期的にDropbox内のファイルをS3に転送する</title><link>http://jagijagijag1.github.io/blog/posts/2019_03_02/</link><pubDate>Sat, 02 Mar 2019 23:33:17 +0900</pubDate><guid>http://jagijagijag1.github.io/blog/posts/2019_03_02/</guid><description>つくったもの 定期実行でDropboxの特定フォルダ下ファイルをS3へ転送する機能 具体的には，CloudWatch Eventで定期起動し下記を実行するLambda関数を開発 Dropbox APIを叩いて特定フォルダ配下の全ファイルを取得 当該ファイルをダウンロードし，S3の特定バケットに保存 バケット保存が成功した場合，Dropbox側のオリジナルファイルを削除 経緯 以前S3に入ってきた画像を解析してPixelaに記録するLamba関数を開発 Garmin connectのストレス測定結果をPixela + Serverlessで草化 - qrunch.net この際，iPhoneのスクリーンショットをS3へ送る手段を下記のように構築 IFTTTでiOSのスクリーンショットをDropboxに入れ，ZapierでDropboxからS3にコピーするようにして前に作ったストレス草化Lambdaとシームレスに連携するようにした．ちょっと経由しすぎな気もするけどひとまず…
&amp;mdash; JagiJagiJagi (@jagijagijag1) November 8, 2018
しかしながら，これだけのためにZapierに課金するのも辛いので，イベント駆動を妥協して定期実行でDropbox→S3転送機能を実現してみた これにより，Zapierを経由せず，iPhoneからPixelaをシームレスに結合 環境 MacOS Mojave Go 1.11.5 Serverless Framework 1.38.0 ライブラリ選択 DropboxのGoライブラリは以下の2つを発見 GitHub - dropbox/dropbox-sdk-go-unofficial: An UNOFFICIAL Dropbox v2 API SDK for Go GitHub - tj/go-dropbox: Dropbox v2 client for Go.</description></item><item><title>serverless framworkで画像認識して関係する映画を推薦するSlack Botを作ったまとめ (No Server November Challenge)</title><link>http://jagijagijag1.github.io/blog/posts/2018_11_24/</link><pubDate>Sat, 24 Nov 2018 16:33:22 +0900</pubDate><guid>http://jagijagijag1.github.io/blog/posts/2018_11_24/</guid><description>serverless frameworkを開発しているServerless, Inc.の企画で，No Server Novemberが開催中
11月中に毎週課題が出される
Challenges that are designed to help experienced users level up, and brand new users get started githubリポジトリのリンクを#noServerNovemberをつぶやくとなにか(official Serverless swag)もらえる?
Nov 12の課題であるAnimalBotとNov 19の課題であるSlack botを組み合わせて開発してみたので内容の紹介
Nov 12 AnimalBot: 画像URLをメンションすると写っている動物を返信するTwitter Botを作る課題 Nov 19 Slack bot: /actionとすると80年台アクション映画をランダムに教えてくれるSlack Botを作る課題 作ったもの Slack上でBotに画像URLをメンションすると，写っている内容と，関連する映画を教えてくれるシステム 画像認識にはAmazon Rekognitionを利用 映画情報はThe Movie DatabaseからAPI経由で取得 結果 猫の画像を送ると，猫が写っていることと，関連映画として魔女の宅急便を教えてくれた 環境 MacOS Mojave Python 3.</description></item><item><title>Togglの記録をServerless + Pixelaで草化</title><link>http://jagijagijag1.github.io/blog/posts/2018_11_10/</link><pubDate>Sat, 10 Nov 2018 10:52:38 +0900</pubDate><guid>http://jagijagijag1.github.io/blog/posts/2018_11_10/</guid><description>作業時間などの時間管理ツールとしてTogglがある いつ，どの作業をしたかを記録 各作業をプロジェクトやタグで分類可能 Toggl Reportsで可視化も提供されており，特定の作業をどれくらい継続しているか，どのくらい時間をかけているかを見れる でもとりあえず草化したい！ ToggleはAPIを提供しているので比較的用意にデータ抽出可能 画像認識とかいらない！ 作ったもの 1日1回，前日に特定プロジェクトにかけた時間をTogglから抽出し，Pixelaに記録 結果 自分の勉強時間を草化できた 環境 MacOS Mojave Go 1.11.1 Serverless Framework 1.32.0 つまづきメモ しょぼい内容だが備忘録として Lambdaにて時間を扱う場合の注意 CloudWatch Eventsをcron式で時間指定する場合，UTCで指定すること e.g. JSTで毎日午前1時に実行したい→UTCで午後4時(-9時間)を指定する cron( 0 16 * * ? * ) Lambda関数で日時を取得する場合(e.g. Goでのtime.Now())，標準ではUTCで取得する 日本時間を使いたい場合はLambda関数の環境変数でタイムゾーンを指定すること e.g. 変数TZ, 値Asia/Tokyo Toggl APIの使い方 TogglのAPIを利用したい場合，リクエストにAPIトークンを含める APIトークンはProfileから取得可能: https://support.</description></item><item><title>Garmin connectのストレス測定結果をPixela + Serverlessで草化</title><link>http://jagijagijag1.github.io/blog/posts/2018_10_28/</link><pubDate>Sun, 28 Oct 2018 11:11:05 +0900</pubDate><guid>http://jagijagijag1.github.io/blog/posts/2018_10_28/</guid><description>Garmin connectでは心拍数の計測をもとにストレスを数値化してくれる
アプリ内では，一覧でみたいときに折れ線グラフしかない + 最大4週間分しか見れない
別の可視化方法として草化してみたい
作ったもの Garmin connectの画面キャプチャをS3にアップロードすると，日付とストレス値をPixelaに記録するシステム
2018/11/17 追記： 下記を用いればiOSでスクリーンショットを取るだけでPixelaに記録できます． (iOS→Dropbox by IFTTT + Dropbox→S3 by Zapier）
Add your latest iPhone screenshots to a Dropbox folder Amazon S3 + Dropbox Integrations 結果：いい感じに草化できた気がする 直近のストレスが高い，日曜は比較的ストレスが少ない
なるべく色がつかない(薄くなる)ようにしたいという逆モチベ
環境 MacOS Mojave Go 1.11.1 Serverless Framework 1.32.0 iPhone 7(iOS 12.01) + Garmin Connect 4.</description></item></channel></rss>